[["Map",1,2,9,10,71,72],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.5.2","content-config-digest","d92f30dc799ee736","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://www.caseyjdavis.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"css-variables\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","projects",["Map",11,12,22,23,32,33,42,43,51,52,61,62],"vango",{"id":11,"data":13,"body":17,"filePath":18,"digest":19,"legacyId":20,"deferredRender":21},{"title":14,"date":15,"description":16},"Vincent Vango",["Date","2024-01-04T00:00:00.000Z"],"2020 Ford Transit Campervan Conversion","import Callout from \"@components/Callout.astro\";\n\n## Intro\n\nThis is my 2020 Ford Transit I purchased used at auction in northern Colorado. It was a Penske truck in its previous life. The van was a little scraped and dinged up but otherwise in fine shape considering its age. It was fleet maintained so there was always regularly scheduled oil changes and a new pair of front brake pads before I became the owner.\n\n## Before\n\n![Van as I received him April 2024](./vango-before.JPG)\n\n## After\n\n![Why yes that is a margarita machine](./vango-after.JPG)\n\n\u003CCallout type=\"error\">\nWhy yes, that IS a Jimmy Buffet Margaritaville Maker running off an extension cord from deep within the van.\n\u003C/Callout>\n\n## Vango Buildout Website\n\nI created a website to document the buildout of the van. You can view it below.\n[Vincent Vango Build Page](https://caseyjdavis.github.io/vango/)","src/content/projects/vango/index.mdx","947903ee1d99aef7","vango/index.mdx",true,"markdown-resume",{"id":22,"data":24,"body":28,"filePath":29,"digest":30,"legacyId":31,"deferredRender":21},{"title":25,"date":26,"description":27},"Markdown Resume",["Date","2025-03-12T00:00:00.000Z"],"Generate a clean resume from a markdown file","// import MdxPublicImage from \"@/components/MdxPublicImage.astro\";\n\n## Intro\n\nI needed to generate current resume and wanted to use Markdown to keep it simple and version controlled. I found several examples online and decided to create my own version. This project uses pandoc to convert a markdown file to a pdf file. I also used weasyprint to add a css stylesheet to the pdf file. This is an example of how pandoc styled the file using a custom css stylesheet:\n\n![Resume Example](./resume-example.png)\n\n## Requirements\n\nI run an instance of Ubuntu 24.04 in Windows Subsystem for Linux (WSL) and used the following packages:\n\n- pandoc\n- weasyprint\n\n## Installation\n\nInstall requirements, I was able to do this easily in Ubuntu with the following commands:\n\n```bash\nsudo apt install pandoc weasyprint -y\n```\nThen clone this repository to your local machine\n```bash\ngit clone https://github.com/caseyjdavis/resume.git\n```\n## Customization\n\nEdit the resume.md file to include your information. You can also edit the resume-css-stylesheet.css file to change the styling of the pdf file. The beauty of this project is that you can easily version control your resume and make changes as needed.\n\n## Output\n\nOnce you are happy with your resume, run the following command to generate the pdf file:\n\n```bash\npandoc resume.md -o resume.pdf --pdf-engine=weasyprint --css resume-css-stylesheet.css\n```\n\n## Finished product\n\nPandoc will export a finished resume.pdf file in the current folder\n\n![Resume Output](./resume-output.png)","src/content/projects/markdown-resume/index.mdx","63da956d7ef3648f","markdown-resume/index.mdx","psappdeploytoolkit",{"id":32,"data":34,"body":38,"filePath":39,"digest":40,"legacyId":41,"deferredRender":21},{"title":35,"date":36,"description":37},"PSAppDeployToolkit",["Date","2016-06-04T00:00:00.000Z"],"Powershell App Deployment Toolkit","## Intro\r\n\r\nPSAppDeployToolkit is a versatile solution that streamlines and standardizes the process of software deployment, making it easier than ever to manage your IT environment. It has a comprehensive set of features, such as dynamic logging, user interaction capabilities, and customizable functionality.\r\n\r\n## Github Repository\r\n\r\nI developed a series of Powershell Application Deployment Toolkit scripts to install applications via Microsoft SCCM for computer imaging.\r\n\r\nGithub Link ‚û°Ô∏è [PSAppDeployToolkit](https://github.com/caseyjdavis/psappdeploytoolkit)\r\n\r\nThese packages were used to deploy software on 40,000 computers used throughout the Poudre School District located in Fort Collins, Colorado.","src/content/projects/psappdeploytoolkit/index.mdx","ced7eda052e3523c","psappdeploytoolkit/index.mdx","dotfiles",{"id":42,"data":44,"body":47,"filePath":48,"digest":49,"legacyId":50,"deferredRender":21},{"title":42,"date":45,"description":46},["Date","2012-03-02T00:00:00.000Z"],"My personal Linux dotfiles","## Intro\r\n\r\nImagine your computer as a meticulously organized workshop, where every tool is precisely placed, every setting is optimized, and everything works exactly the way you want. In the world of Linux, this digital workshop is crafted through something seemingly mundane yet incredibly powerful: dotfiles.\r\nDotfiles are the secret sauce of Linux customization, hiding in plain sight within your home directory. Easily recognizable by their leading dot (.), these configuration files are the invisible architects of your computing environment. They control everything from your shell's behavior and terminal appearance to application settings and system preferences. What might look like simple text files are actually the blueprint of your personalized digital workspace.\r\nWhether you're a seasoned developer, a Linux enthusiast, or a curious newcomer, understanding dotfiles can transform how you interact with your computer. They're not just files‚Äîthey're a reflection of your unique workflow, a testament to the incredible flexibility that makes Linux such a powerful operating system.\r\n\r\n## Github Repository\r\n\r\nGithub Link ‚û°Ô∏è [Casey's dotfiles](https://github.com/caseyjdavis/dotfiles)","src/content/projects/dotfiles/index.mdx","457783598079a5cd","dotfiles/index.mdx","wsl-setup",{"id":51,"data":53,"body":57,"filePath":58,"digest":59,"legacyId":60,"deferredRender":21},{"title":54,"date":55,"description":56},"Windows Subsystem for Linux Ansible Playbook",["Date","2022-10-22T00:00:00.000Z"],"Scripting a full WSL installation","## What is Windows Subsystem for Linux?\r\n\r\nWSL is a powerful compatibility layer developed by Microsoft that allows users to run native Linux command-line tools and utilities directly on Windows, without the overhead of traditional virtual machines or dual-boot setups. It provides a lightweight, integrated experience that bridges the gap between Windows and Linux ecosystems.\r\n\r\nWhether you're a software engineer, a system administrator, or a tech enthusiast, Windows Subsystem for Linux represents a pivotal advancement in operating system interoperability, making cross-platform work more accessible and efficient than ever before.\r\n\r\n## Automated setup using Ansible\r\n\r\nHere is my Github repository that you clone into a fresh WSL install that will provision the virtual machine with packages, settings, locales, etc. It will clone my dotfiles as well and leave you with a completely up to date Ubuntu instance running Oh-My-Zsh, vim, npm and several other Linux tools.\r\n\r\nGithub Link ‚û°Ô∏è [Casey's WSL Setup](https://github.com/caseyjdavis/setup)","src/content/projects/WSL setup/index.mdx","90ed67f7716b57b4","WSL setup/index.mdx","nv9p",{"id":61,"data":63,"body":67,"filePath":68,"digest":69,"legacyId":70,"deferredRender":21},{"title":64,"date":65,"description":66},"NV9P Amateur Radio",["Date","2017-02-20T00:00:00.000Z"],"My personal ham radio website","## Intro\r\n\r\nAmateur radio caught my eye in 2013 and I had no idea how unforgivingly difficult it would be for me muddling through every step of the way. There is an intense learning curve and oftentimes it takes me dozens of attempts before I get something even close to success. However it is really satisfying when you finally do make a breakthrough but be warned those are few and far between.\r\n\r\nüìª [NV9P Amateur Radio](https://www.nv9p.com)","src/content/projects/nv9p/index.mdx","06607bdbaaaff4ff","nv9p/index.mdx","blog",["Map",73,74,116,117,162,163,206,207],"migrate-to-entra-connect-p1",{"id":73,"data":75,"body":79,"filePath":80,"assetImports":81,"digest":86,"rendered":87,"legacyId":115},{"title":76,"date":77,"draft":78},"Migrate to Microsoft Entra Connect Part 1",["Date","2025-03-14T00:00:00.000Z"],false,"## Intro\n\nIf you are a Microsoft Entra user, they are encouraging upgrading Azure Active Directory Connect customers to migrate to Microsoft Entra Connect. Here are some steps to help migrate your existing configuration.\n\n## In-Place Upgrade or Swing Migration?\n\nAfter some careful consideration I settled on a Swing Migration to give me the most flexibility and backup in case something went wrong. Here's how Microsoft explains it:\n\n![Diagram of a Swing Server Migration](./stagingserver1.png)\n\n\n> For some customers, an in-place upgrade can impose a considerable risk to production in case there's an issue while upgrading and the server can't be rolled back. A single production server might also be impractical as the initial sync cycle might take multiple days, and during this time, no delta changes are processed.\n\n> The recommended method for these scenarios is to use a swing migration. You can use this method when you need to upgrade the Windows Server operating system. Additionally, you can use it when you plan to make substantial changes to your environment configuration, which need to be tested before they're pushed to production.\n\n## Backup Existing Configuration\n\nOpen Azure AD Connect on your existing server and you can export your working config for the second swing server\n\n![Export config from Azure AD Connect](./adconnect-exportsettings.png)\n\nIf you are using a fairly recent version of AD Connect it will export in JSON\n\n![Example JSON config](./adconnect-json.png)\n\n## Configuring TLS 1.2\n\nSetup a new Windows server VM where you will install Entra Connect. Before you can successfully install the application you must configure TLS on your server. Open Powershell ISE as Administrator and run this code on the swing server. This is writing 8 new entries to the Registry enabling TLS 1.2\n\n```powershell\nIf (-Not (Test-Path 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319'))\n{\n    New-Item 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319' -Force | Out-Null\n}\nNew-ItemProperty -Path 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319' -Name 'SystemDefaultTlsVersions' -Value '1' -PropertyType 'DWord' -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319' -Name 'SchUseStrongCrypto' -Value '1' -PropertyType 'DWord' -Force | Out-Null\n\nIf (-Not (Test-Path 'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319'))\n{\n    New-Item 'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319' -Force | Out-Null\n}\nNew-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319' -Name 'SystemDefaultTlsVersions' -Value '1' -PropertyType 'DWord' -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319' -Name 'SchUseStrongCrypto' -Value '1' -PropertyType 'DWord' -Force | Out-Null\n\nIf (-Not (Test-Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server'))\n{\n    New-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server' -Force | Out-Null\n}\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server' -Name 'Enabled' -Value '1' -PropertyType 'DWord' -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server' -Name 'DisabledByDefault' -Value '0' -PropertyType 'DWord' -Force | Out-Null\n\nIf (-Not (Test-Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client'))\n{\n    New-Item 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client' -Force | Out-Null\n}\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client' -Name 'Enabled' -Value '1' -PropertyType 'DWord' -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client' -Name 'DisabledByDefault' -Value '0' -PropertyType 'DWord' -Force | Out-Null\n\nWrite-Host 'TLS 1.2 has been enabled. You must restart the Windows Server for the changes to take affect.' -ForegroundColor Cyan\n```\n\n## Importing Configuration\n\nAfter TLS has been enabled, install the software and launch the executible. Walk through the wizard and you will reach a point where you can import your existing config\n\n![Import existing AD Connect Config](./entraconnect-import.png)\n\n## Stick around for Part 2\n\nWe will finish configuring Microsoft Entra Connect and performing a synchronization of user data.","src/content/blog/migrate-to-entra-connect-p1/index.md",[82,83,84,85],"./stagingserver1.png","./adconnect-exportsettings.png","./adconnect-json.png","./entraconnect-import.png","e3de38fe97fac25d",{"html":88,"metadata":89},"\u003Ch2 id=\"intro\">Intro\u003C/h2>\n\u003Cp>If you are a Microsoft Entra user, they are encouraging upgrading Azure Active Directory Connect customers to migrate to Microsoft Entra Connect. Here are some steps to help migrate your existing configuration.\u003C/p>\n\u003Ch2 id=\"in-place-upgrade-or-swing-migration\">In-Place Upgrade or Swing Migration?\u003C/h2>\n\u003Cp>After some careful consideration I settled on a Swing Migration to give me the most flexibility and backup in case something went wrong. Here‚Äôs how Microsoft explains it:\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./stagingserver1.png&#x22;,&#x22;alt&#x22;:&#x22;Diagram of a Swing Server Migration&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cblockquote>\n\u003Cp>For some customers, an in-place upgrade can impose a considerable risk to production in case there‚Äôs an issue while upgrading and the server can‚Äôt be rolled back. A single production server might also be impractical as the initial sync cycle might take multiple days, and during this time, no delta changes are processed.\u003C/p>\n\u003C/blockquote>\n\u003Cblockquote>\n\u003Cp>The recommended method for these scenarios is to use a swing migration. You can use this method when you need to upgrade the Windows Server operating system. Additionally, you can use it when you plan to make substantial changes to your environment configuration, which need to be tested before they‚Äôre pushed to production.\u003C/p>\n\u003C/blockquote>\n\u003Ch2 id=\"backup-existing-configuration\">Backup Existing Configuration\u003C/h2>\n\u003Cp>Open Azure AD Connect on your existing server and you can export your working config for the second swing server\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./adconnect-exportsettings.png&#x22;,&#x22;alt&#x22;:&#x22;Export config from Azure AD Connect&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>If you are using a fairly recent version of AD Connect it will export in JSON\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./adconnect-json.png&#x22;,&#x22;alt&#x22;:&#x22;Example JSON config&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"configuring-tls-12\">Configuring TLS 1.2\u003C/h2>\n\u003Cp>Setup a new Windows server VM where you will install Entra Connect. Before you can successfully install the application you must configure TLS on your server. Open Powershell ISE as Administrator and run this code on the swing server. This is writing 8 new entries to the Registry enabling TLS 1.2\u003C/p>\n\u003Cpre class=\"astro-code css-variables\" style=\"background-color:var(--astro-code-background);color:var(--astro-code-foreground); overflow-x: auto;\" tabindex=\"0\" data-language=\"powershell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-keyword)\">If\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">-Not\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\">Test-Path\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">    New-Item\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'SystemDefaultTlsVersions'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'1'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'SchUseStrongCrypto'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'1'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-keyword)\">If\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">-Not\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\">Test-Path\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">    New-Item\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'SystemDefaultTlsVersions'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'1'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'SchUseStrongCrypto'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'1'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-keyword)\">If\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">-Not\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\">Test-Path\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server'\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">    New-Item\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'Enabled'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'1'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DisabledByDefault'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'0'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-keyword)\">If\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">-Not\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\"> (\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\">Test-Path\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client'\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">    New-Item\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-foreground)\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'Enabled'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'1'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">New-ItemProperty\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Path \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Name \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DisabledByDefault'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Value \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'0'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">PropertyType \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\">'DWord'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">Force \u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\">|\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-function)\"> Out-Null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">Write-Host\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string-expression)\"> 'TLS 1.2 has been enabled. You must restart the Windows Server for the changes to take affect.'\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-keyword)\"> -\u003C/span>\u003Cspan style=\"color:var(--astro-code-foreground)\">ForegroundColor Cyan\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"importing-configuration\">Importing Configuration\u003C/h2>\n\u003Cp>After TLS has been enabled, install the software and launch the executible. Walk through the wizard and you will reach a point where you can import your existing config\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./entraconnect-import.png&#x22;,&#x22;alt&#x22;:&#x22;Import existing AD Connect Config&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"stick-around-for-part-2\">Stick around for Part 2\u003C/h2>\n\u003Cp>We will finish configuring Microsoft Entra Connect and performing a synchronization of user data.\u003C/p>",{"headings":90,"localImagePaths":110,"remoteImagePaths":111,"frontmatter":112,"imagePaths":114},[91,95,98,101,104,107],{"depth":92,"slug":93,"text":94},2,"intro","Intro",{"depth":92,"slug":96,"text":97},"in-place-upgrade-or-swing-migration","In-Place Upgrade or Swing Migration?",{"depth":92,"slug":99,"text":100},"backup-existing-configuration","Backup Existing Configuration",{"depth":92,"slug":102,"text":103},"configuring-tls-12","Configuring TLS 1.2",{"depth":92,"slug":105,"text":106},"importing-configuration","Importing Configuration",{"depth":92,"slug":108,"text":109},"stick-around-for-part-2","Stick around for Part 2",[82,83,84,85],[],{"title":76,"date":113,"draft":78},"2025-03-14",[82,83,84,85],"migrate-to-entra-connect-p1/index.md","truenas-letsencrypt-ssl",{"id":116,"data":118,"body":121,"filePath":122,"assetImports":123,"digest":132,"rendered":133,"legacyId":161},{"title":119,"date":120,"draft":78},"Let's Encrypt SSL for TrueNAS",["Date","2025-03-24T00:00:00.000Z"],"## Intro\n\nTrueNAS has a built-in acme dns authenticator available via the web ui which means you can easily generate SSL certificates for the admin portal. Here are the steps to setup Cloudflare as an authenticator using Let's Encrypt for automatic SSL certificates for TrueNAS.\n\n## Edit User\n\nFirst you need to edit a user on your TrueNAS installation to have a valid e-mail address. Here I am editing the root user and putting in my e-mail. This is required to generate a certificate.\n\n![Add Cloudflare e-mail to local user](./edit-user.png)\n\n## Add ACME DNS Authenticator\n\nNext you add a DNS authenticator. In this case I am using Cloudflare because my domain is hosted there. You will need to generate a API token that allows you to edit DNS zones. Name the authenticator and paste your token in the API Token field. Note: If you use a token you do NOT have to enter your Cloudflare email and API Key.\n\n![Adding ACMD DNS Authenticator](./acme-dns-authenticator.png)\n\n## Add Certificate Signing Request\n\nHere you enter the details of the Certificate Signing Request you want to be visible on the certificate details. Fill in the required fields and save.\n\n![Generating a Certificate Signing Request in TrueNAS](./add-certificate-signing-request.png)\n\nOnce you have generated a CSR, then you turn around and click the wrench icon üîß in the web gui and that will open the wizard to generate the certificate.\n\n![Generating a Certificate Signing Request in TrueNAS](./add-certificate-signing-request%2002.png)\n\n## Generating a certificate\n\nFor the identifier I use `letsencrypt`, accept the Terms of Service, I set the certificate to renew every 30 days since this is local on my home lab. Make sure to select \"Production Directory\", select the domain and the authenticator and click Save.\n\n![Let's Encrypt Certificate for TrueNAS](./acme-certificate.png)\n\nA pop-up box will open with progress and you can see if the certificate was provisioned. This is what a successful DNS challenge will look like.\n\n![Let's Encrypt Certificate for TrueNAS](./dns-challenge.png)\n\n## Activating new certificate\n\nNow that you have generated a valid SSL cert you need to make sure the web gui in TrueNAS uses that certificate. Go to System Settings > General > GUI > Settings. In this menu you will select your new cert from the drop down box and make sure to click the HTTP > HTTPS Redirect. Click Save. The web interface will need to restart.\n\n![Activate Let's Encrypt Certificate for TrueNAS](./gui-settings.png)\n\n## Verifying SSL cert\n\nIf you have done everything correctly the certificate will be active, and you can click on the lock in your browser window to confirm the certificate has been issued by Let's Encrypt.\n\n![Verify Let's Encrypt Certificate for TrueNAS](./ssl-verified.png)","src/content/blog/truenas-letsencrypt-ssl/index.md",[124,125,126,127,128,129,130,131],"./edit-user.png","./acme-dns-authenticator.png","./add-certificate-signing-request.png","./add-certificate-signing-request 02.png","./acme-certificate.png","./dns-challenge.png","./gui-settings.png","./ssl-verified.png","148b81b3b7ca1264",{"html":134,"metadata":135},"\u003Ch2 id=\"intro\">Intro\u003C/h2>\n\u003Cp>TrueNAS has a built-in acme dns authenticator available via the web ui which means you can easily generate SSL certificates for the admin portal. Here are the steps to setup Cloudflare as an authenticator using Let‚Äôs Encrypt for automatic SSL certificates for TrueNAS.\u003C/p>\n\u003Ch2 id=\"edit-user\">Edit User\u003C/h2>\n\u003Cp>First you need to edit a user on your TrueNAS installation to have a valid e-mail address. Here I am editing the root user and putting in my e-mail. This is required to generate a certificate.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./edit-user.png&#x22;,&#x22;alt&#x22;:&#x22;Add Cloudflare e-mail to local user&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"add-acme-dns-authenticator\">Add ACME DNS Authenticator\u003C/h2>\n\u003Cp>Next you add a DNS authenticator. In this case I am using Cloudflare because my domain is hosted there. You will need to generate a API token that allows you to edit DNS zones. Name the authenticator and paste your token in the API Token field. Note: If you use a token you do NOT have to enter your Cloudflare email and API Key.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./acme-dns-authenticator.png&#x22;,&#x22;alt&#x22;:&#x22;Adding ACMD DNS Authenticator&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"add-certificate-signing-request\">Add Certificate Signing Request\u003C/h2>\n\u003Cp>Here you enter the details of the Certificate Signing Request you want to be visible on the certificate details. Fill in the required fields and save.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./add-certificate-signing-request.png&#x22;,&#x22;alt&#x22;:&#x22;Generating a Certificate Signing Request in TrueNAS&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>Once you have generated a CSR, then you turn around and click the wrench icon üîß in the web gui and that will open the wizard to generate the certificate.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./add-certificate-signing-request 02.png&#x22;,&#x22;alt&#x22;:&#x22;Generating a Certificate Signing Request in TrueNAS&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"generating-a-certificate\">Generating a certificate\u003C/h2>\n\u003Cp>For the identifier I use \u003Ccode>letsencrypt\u003C/code>, accept the Terms of Service, I set the certificate to renew every 30 days since this is local on my home lab. Make sure to select ‚ÄúProduction Directory‚Äù, select the domain and the authenticator and click Save.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./acme-certificate.png&#x22;,&#x22;alt&#x22;:&#x22;Let&#x27;s Encrypt Certificate for TrueNAS&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>A pop-up box will open with progress and you can see if the certificate was provisioned. This is what a successful DNS challenge will look like.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./dns-challenge.png&#x22;,&#x22;alt&#x22;:&#x22;Let&#x27;s Encrypt Certificate for TrueNAS&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"activating-new-certificate\">Activating new certificate\u003C/h2>\n\u003Cp>Now that you have generated a valid SSL cert you need to make sure the web gui in TrueNAS uses that certificate. Go to System Settings > General > GUI > Settings. In this menu you will select your new cert from the drop down box and make sure to click the HTTP > HTTPS Redirect. Click Save. The web interface will need to restart.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./gui-settings.png&#x22;,&#x22;alt&#x22;:&#x22;Activate Let&#x27;s Encrypt Certificate for TrueNAS&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"verifying-ssl-cert\">Verifying SSL cert\u003C/h2>\n\u003Cp>If you have done everything correctly the certificate will be active, and you can click on the lock in your browser window to confirm the certificate has been issued by Let‚Äôs Encrypt.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./ssl-verified.png&#x22;,&#x22;alt&#x22;:&#x22;Verify Let&#x27;s Encrypt Certificate for TrueNAS&#x22;,&#x22;index&#x22;:0}\">\u003C/p>",{"headings":136,"localImagePaths":156,"remoteImagePaths":157,"frontmatter":158,"imagePaths":160},[137,138,141,144,147,150,153],{"depth":92,"slug":93,"text":94},{"depth":92,"slug":139,"text":140},"edit-user","Edit User",{"depth":92,"slug":142,"text":143},"add-acme-dns-authenticator","Add ACME DNS Authenticator",{"depth":92,"slug":145,"text":146},"add-certificate-signing-request","Add Certificate Signing Request",{"depth":92,"slug":148,"text":149},"generating-a-certificate","Generating a certificate",{"depth":92,"slug":151,"text":152},"activating-new-certificate","Activating new certificate",{"depth":92,"slug":154,"text":155},"verifying-ssl-cert","Verifying SSL cert",[124,125,126,127,128,129,130,131],[],{"title":119,"date":159,"draft":78},"2025-03-24",[124,125,126,127,128,129,130,131],"truenas-letsencrypt-ssl/index.md","docker-container-nfs",{"id":162,"data":164,"body":167,"filePath":168,"assetImports":169,"digest":174,"rendered":175,"legacyId":205},{"title":165,"date":166,"draft":78},"Running Uptime Kuma in a Docker Container with NFSv4 Storage",["Date","2024-08-22T00:00:00.000Z"],"## Introduction\n\nIn this guide, I‚Äôll walk you through setting up Uptime Kuma, a self-hosted monitoring tool, in a Docker container using NFSv4 for persistent storage. This setup is part of my homelab, where I experiment with containerization and various technologies.\n\n## Prerequisites\n\nBefore starting, ensure you have the following:\n\n- **NFS Server**: I‚Äôm using TrueNAS on an HP EliteDesk.\n- **Docker Host**: My Docker server runs on a separate HP EliteDesk.\n\n## Step 1: Export an NFS Share\n\nBegin by exporting an NFS share from your NFS server. In my case, I exported the directory `/mnt/pool0/nfs/docker-volumes` from TrueNAS. \n\nNext, SSH into your Docker server and mount the NFS share. For example:\n\n```bash\nsudo mount -t nfs4 lilmt.qth.nv9p.com:/mnt/pool0/nfs/docker-volumes /mnt/nfs\n```\n\nOnce mounted, create a directory for Uptime Kuma‚Äôs persistent data:\n\n```bash\nmkdir -p /mnt/nfs/uptimekuma-data\n```\n\nThis directory will store all the container‚Äôs data.\n\n## Step 2: Create a Volume in Portainer\n\nI use Portainer to manage my Docker containers. To create a volume:\n\n1. Access the Portainer web interface.\n2. Navigate to **Volumes** and click **Add Volume**.\n3. Fill in the NFS server details, including the mount point (`/mnt/nfs/uptimekuma-data`), and click **Create the volume**.\n\n![Create NFS volume via Portainer](./create-volume.png)\n\n## Step 3: Deploy the Uptime Kuma Container\n\nNow, create the Uptime Kuma container:\n\n1. Go to the **Containers** section in Portainer and click **Add Container**.\n2. Name the container and use the official Uptime Kuma image: `louislam/uptime-kuma`.\n3. Under **Network**, map port `3000` on both the host and container.\n4. Scroll to the **Volumes** section and map the NFS volume:\n    - Set the container path to `/app/data`.\n    - Select the NFS volume created earlier.\n\nFinally, click **Deploy the container**.\n\n![Create Uptimekuma Container in Docker](./create-container.png)\n\n![Add NFS volume to container](./add-nfs-volume.png)\n\n## Step 4: Access Uptime Kuma\n\nOnce the container is running, navigate to your Docker server‚Äôs IP address on port `3000` to access Uptime Kuma. For example:\n\n```\nhttp://docker-01.qth.nv9p.com:3000\n```\n\nYou should see the Uptime Kuma interface, ready for configuration.\n\n![Monitoring website via Uptime Kuma as a docker container](./uptime-kuma.png)\n\n## Conclusion\n\nBy leveraging NFSv4 for persistent storage, you can efficiently manage Uptime Kuma in a Docker container. This setup ensures data persistence and simplifies container management using Portainer. Happy monitoring!","src/content/blog/docker-container-nfs/index.md",[170,171,172,173],"./create-volume.png","./create-container.png","./add-nfs-volume.png","./uptime-kuma.png","536ac05a1ac5eef1",{"html":176,"metadata":177},"\u003Ch2 id=\"introduction\">Introduction\u003C/h2>\n\u003Cp>In this guide, I‚Äôll walk you through setting up Uptime Kuma, a self-hosted monitoring tool, in a Docker container using NFSv4 for persistent storage. This setup is part of my homelab, where I experiment with containerization and various technologies.\u003C/p>\n\u003Ch2 id=\"prerequisites\">Prerequisites\u003C/h2>\n\u003Cp>Before starting, ensure you have the following:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>NFS Server\u003C/strong>: I‚Äôm using TrueNAS on an HP EliteDesk.\u003C/li>\n\u003Cli>\u003Cstrong>Docker Host\u003C/strong>: My Docker server runs on a separate HP EliteDesk.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"step-1-export-an-nfs-share\">Step 1: Export an NFS Share\u003C/h2>\n\u003Cp>Begin by exporting an NFS share from your NFS server. In my case, I exported the directory \u003Ccode>/mnt/pool0/nfs/docker-volumes\u003C/code> from TrueNAS.\u003C/p>\n\u003Cp>Next, SSH into your Docker server and mount the NFS share. For example:\u003C/p>\n\u003Cpre class=\"astro-code css-variables\" style=\"background-color:var(--astro-code-background);color:var(--astro-code-foreground); overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">sudo\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string)\"> mount\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string)\"> -t\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string)\"> nfs4\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string)\"> lilmt.qth.nv9p.com:/mnt/pool0/nfs/docker-volumes\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string)\"> /mnt/nfs\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Once mounted, create a directory for Uptime Kuma‚Äôs persistent data:\u003C/p>\n\u003Cpre class=\"astro-code css-variables\" style=\"background-color:var(--astro-code-background);color:var(--astro-code-foreground); overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:var(--astro-code-token-function)\">mkdir\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string)\"> -p\u003C/span>\u003Cspan style=\"color:var(--astro-code-token-string)\"> /mnt/nfs/uptimekuma-data\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>This directory will store all the container‚Äôs data.\u003C/p>\n\u003Ch2 id=\"step-2-create-a-volume-in-portainer\">Step 2: Create a Volume in Portainer\u003C/h2>\n\u003Cp>I use Portainer to manage my Docker containers. To create a volume:\u003C/p>\n\u003Col>\n\u003Cli>Access the Portainer web interface.\u003C/li>\n\u003Cli>Navigate to \u003Cstrong>Volumes\u003C/strong> and click \u003Cstrong>Add Volume\u003C/strong>.\u003C/li>\n\u003Cli>Fill in the NFS server details, including the mount point (\u003Ccode>/mnt/nfs/uptimekuma-data\u003C/code>), and click \u003Cstrong>Create the volume\u003C/strong>.\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./create-volume.png&#x22;,&#x22;alt&#x22;:&#x22;Create NFS volume via Portainer&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"step-3-deploy-the-uptime-kuma-container\">Step 3: Deploy the Uptime Kuma Container\u003C/h2>\n\u003Cp>Now, create the Uptime Kuma container:\u003C/p>\n\u003Col>\n\u003Cli>Go to the \u003Cstrong>Containers\u003C/strong> section in Portainer and click \u003Cstrong>Add Container\u003C/strong>.\u003C/li>\n\u003Cli>Name the container and use the official Uptime Kuma image: \u003Ccode>louislam/uptime-kuma\u003C/code>.\u003C/li>\n\u003Cli>Under \u003Cstrong>Network\u003C/strong>, map port \u003Ccode>3000\u003C/code> on both the host and container.\u003C/li>\n\u003Cli>Scroll to the \u003Cstrong>Volumes\u003C/strong> section and map the NFS volume:\n\u003Cul>\n\u003Cli>Set the container path to \u003Ccode>/app/data\u003C/code>.\u003C/li>\n\u003Cli>Select the NFS volume created earlier.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Cp>Finally, click \u003Cstrong>Deploy the container\u003C/strong>.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./create-container.png&#x22;,&#x22;alt&#x22;:&#x22;Create Uptimekuma Container in Docker&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./add-nfs-volume.png&#x22;,&#x22;alt&#x22;:&#x22;Add NFS volume to container&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"step-4-access-uptime-kuma\">Step 4: Access Uptime Kuma\u003C/h2>\n\u003Cp>Once the container is running, navigate to your Docker server‚Äôs IP address on port \u003Ccode>3000\u003C/code> to access Uptime Kuma. For example:\u003C/p>\n\u003Cpre class=\"astro-code css-variables\" style=\"background-color:var(--astro-code-background);color:var(--astro-code-foreground); overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>http://docker-01.qth.nv9p.com:3000\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>You should see the Uptime Kuma interface, ready for configuration.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;./uptime-kuma.png&#x22;,&#x22;alt&#x22;:&#x22;Monitoring website via Uptime Kuma as a docker container&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>By leveraging NFSv4 for persistent storage, you can efficiently manage Uptime Kuma in a Docker container. This setup ensures data persistence and simplifies container management using Portainer. Happy monitoring!\u003C/p>",{"headings":178,"localImagePaths":200,"remoteImagePaths":201,"frontmatter":202,"imagePaths":204},[179,182,185,188,191,194,197],{"depth":92,"slug":180,"text":181},"introduction","Introduction",{"depth":92,"slug":183,"text":184},"prerequisites","Prerequisites",{"depth":92,"slug":186,"text":187},"step-1-export-an-nfs-share","Step 1: Export an NFS Share",{"depth":92,"slug":189,"text":190},"step-2-create-a-volume-in-portainer","Step 2: Create a Volume in Portainer",{"depth":92,"slug":192,"text":193},"step-3-deploy-the-uptime-kuma-container","Step 3: Deploy the Uptime Kuma Container",{"depth":92,"slug":195,"text":196},"step-4-access-uptime-kuma","Step 4: Access Uptime Kuma",{"depth":92,"slug":198,"text":199},"conclusion","Conclusion",[170,171,172,173],[],{"title":165,"date":203,"draft":78},"2024-08-22",[170,171,172,173],"docker-container-nfs/index.md","migrating-blog",{"id":206,"data":208,"body":211,"filePath":212,"digest":213,"rendered":214,"legacyId":223},{"title":209,"date":210,"draft":78},"Migrating blog",["Date","2025-03-13T00:00:00.000Z"],"This is just a placeholder as I am moving over blog posts, staging them in dev and releasing them to my website as they get converted.","src/content/blog/migrating-blog/index.md","302c53f093e81fdd",{"html":215,"metadata":216},"\u003Cp>This is just a placeholder as I am moving over blog posts, staging them in dev and releasing them to my website as they get converted.\u003C/p>",{"headings":217,"localImagePaths":218,"remoteImagePaths":219,"frontmatter":220,"imagePaths":222},[],[],[],{"title":209,"date":221,"draft":78},"2025-03-13",[],"migrating-blog/index.md"]